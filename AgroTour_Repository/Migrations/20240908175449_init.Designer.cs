// <auto-generated />
using AgroTour_Repository.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AgroTour_Repository.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240908175449_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AgroTour_AggregateRoot.Entities.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<int>("Cost")
                        .HasColumnType("int");

                    b.Property<bool>("IsBooked")
                        .HasColumnType("bit");

                    b.Property<string>("LocationAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocationCity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("locationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacity = 500,
                            Cost = 100,
                            IsBooked = false,
                            LocationAddress = "ShaBhag",
                            LocationCity = "Dhaka",
                            locationName = "National Museum"
                        },
                        new
                        {
                            Id = 2,
                            Capacity = 1000,
                            Cost = 50,
                            IsBooked = false,
                            LocationAddress = "Mirpur-1",
                            LocationCity = "Dhaka",
                            locationName = "ZOO"
                        },
                        new
                        {
                            Id = 3,
                            Capacity = 500,
                            Cost = 100,
                            IsBooked = false,
                            LocationAddress = "Bijoy Soroni",
                            LocationCity = "Dhaka",
                            locationName = "National Military Museum"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
